generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model addresses {
  id        Int         @id @default(autoincrement())
  street    String?
  city      String?
  state     String?
  zip_code  String?
  country   String?
  companies companies[]
  providers providers[]
}

model categories {
  id       Int        @id @default(autoincrement())
  name     String?    @unique
  products products[]
}

model companies {
  id         Int         @id @default(autoincrement())
  name       String?     @unique
  phone      String?
  email      String?
  address_id Int?
  addresses  addresses?  @relation(fields: [address_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customers  customers[]
}

model customers {
  id         Int        @id @default(autoincrement())
  identifier String?    @unique
  name       String
  email      String?    @unique
  phone      String?
  notes      String?
  company_id Int?
  companies  companies? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  invoices   invoices[]
}

model invoices {
  id          Int       @id @default(autoincrement())
  customer_id Int
  amount      Decimal   @db.Money
  date        DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  due_date    DateTime  @db.Date
  status      String?
  customers   customers @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model products {
  id           Int         @id @default(autoincrement())
  name         String?
  price        Decimal     @db.Money
  custom_price Decimal?    @db.Money
  quantity     Int?        @default(0)
  provider_id  Int?
  description  String?
  category_id  Int?
  categories   categories? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  providers    providers?  @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model providers {
  id         Int        @id @default(autoincrement())
  name       String
  address_id Int?
  products   products[]
  addresses  addresses? @relation(fields: [address_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model roles {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  users users[]
}

model users {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  email    String @unique
  role_id  Int?
  roles    roles? @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
